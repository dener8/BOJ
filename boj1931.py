# 1931
# 그리디는 보통 정렬과 같이 쓰이나보네 ?

# 1. 빨리 끝나는 회의 순서대로 정렬 (끝나는 시간 작을수록 좋음)
# 2. 빨리 시작하는 회의 순서대로 정렬 (시작하는 시간 작을수록 좋음)
# ==> [1~4, 4~6, 5~6] 1번 정렬을 통해 이런 결과가 나왔다고 가정하면,
# 4~6을 선택하든 5~6을 선택하든 경우의 수는 같다.
# 그렇기 때문에, 시작 시간은 늦을수록 좋지 않을까라는 생각은 틀린 것이다.
# 고려해야 할 경우는 5~5와 같이 start == end가 동일한 경우다.
# ==> [1~4, 4~5, 5~5]로 가정했을 때,
# 4~5 -> 5~5 의 순서라면 경우의 수는 2지만,
# 5~5 -> 4~5 의 순서라면 뒤의 4~5는 시행되지 않는다.
# 그러므로, 2. 에 해당하는 정렬 또한 오름차순으로 해줘야 한다.

input = __import__('sys').stdin.readline
n = int(input())
li = []
for i in range(n):
    li.append(list(map(int,input().split())))
li = sorted(li, key = lambda x: [x[1], x[0]])

start, end = 0, 0
ans = 0
for i in range(len(li)):
    if li[i][0] >= end:
        ans += 1
        start = li[i][0]
        end = li[i][1]
print(ans)